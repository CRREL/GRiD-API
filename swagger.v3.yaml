swagger: '2.0'

################################################################################
# API Information
################################################################################
info:
  title: GRiD API v3
  description: |
    This is the API v3 specification for the Geospatial Repository and
    Data Management System (aka GRiD). Here you can see API examples and
    interact with all of the API endpoints visually in your browser. If you would
    like to see the API in action, use the
    "Try it out!" button for an endpoint. Note: you will be interacting with
    live data.

    Authentication using OAuth 2.0 - Authorization Code.
  version: "3.0.2"
  contact:
    url: https://github.com/CRREL/GRiD-API/

################################################################################
# Other root-level fixed fields
################################################################################
host: {{ domain }}
schemes:
  - {{ protocol }}
securityDefinitions:
  OauthSecurity:
    type: oauth2
    authorizationUrl: {{ URL_ROOT }}api/authorize
    tokenUrl: {{ URL_ROOT }}api/token
    flow: accessCode
    scopes:
      api: grant api access
security:
  - OauthSecurity:
    - api
basePath: {{ URL_ROOT }}api/v3
consumes:
  - application/json
  - application/x-www-form-urlencoded
produces:
  - application/json
tags:
  - name: AOI
    description: AOI resources
  - name: Export
    description: Export resources
  - name: Product
    description: Product resources
  - name: Geoname
    description: Lookup geoname
  - name: Task
    description: Task resources
  - name: Hook
    description: Hook resources
  - name: Holding
    description: Data Holding resources
  - name: STAC
    description: STAC API access

################################################################################
# Paths
################################################################################
paths:
  /aois:
    get:
      tags:
        - AOI
      summary: Get all AOIs
      description: |
        Get a list of the AOIs created by or shared with your user.
      parameters:
        - name: geom
          in: query
          description: A WKT or GeoJSON geometry used to filter AOI results.
          required: false
          type: string
        - name: intersections
          in: query
          description: |
            Determines whether or not to include a list of products that intersect with the AOI geometry. This can
            be time-consuming so setting this to False is recommended if product intersections aren't needed.
            Default value is False.
          required: false
          default: false
          type: boolean
        - name: intersection_types
          in: query
          description: |
            A comma-separated list of product types to include in the product intersection check.
            Valid intersection type parameters: pointcloud, raster, vector, mesh.
            All types are included by default.
          required: false
          type: string
        - name: intersection_geoms
          in: query
          description: |
            Determines whether or not to include the entire geometry of each product that intersects with the AOI geometry.
            Product geometries can be complex, so setting this to False can greatly reduce the return size and
            is recommended if the entire geometry is not needed.
            Default value is False.
          required: false
          default: false
          type: boolean
        - name: export_full
          in: query
          description: |
            Determines whether or not to include a list of export files that
            belong to exports for the AOI.
            Default value is False.
          required: false
          default: false
          type: boolean
        - name: sort
          in: query
          description: |
            Sort the result by a given field.  A "-" can be prepended to the field to indicate descending order.
            Valid AOI sorting parameters: area, created_at, name, pk, user.
          default: pk
          required: false
          type: string
      responses:
        200:
          description: All of a users AOIs.
          schema:
            $ref: '#/definitions/AOIResponse'
        400:
          $ref: '#/responses/ErrorResponse'
        401:
          $ref: '#/responses/UnauthenticatedResponse'
    post:
      tags:
        - AOI
      summary: Create an AOI
      consumes:
        - application/json
      description: |
        Create a new AOI for the given geometry.
      parameters:
        - name: name
          in: formData
          description: The name for the AOI.
          required: true
          type: string
        - name: geom
          in: formData
          description: A WKT or GeoJSON geometry describing the AOI. For WKT, supports POLYGON and MULTIPOLYGON natively, POINT and LINESTRING with a buffer parameter.
          required: true
          type: string
        - name: buffer
          in: formData
          description: A buffer radius in meters for POINT or LINESTRING geom WKTs.
          required: false
          type: float
        - name: notes
          in: formData
          description: The notes for the AOI.
          required: false
          type: string
        - name: subscribe
          in: formData
          description: |
            Whether or not to subscribe to the AOI. Accepted values: True, False, T, F, 1, or 0.
          default: false
          required: false
          type: boolean
        - name: intersections
          in: formData
          description: |
            Determines whether or not to include a list of products that intersect with the AOI geometry. This can
            be time-consuming so setting this to False is recommended if product intersections aren't needed.
            Default value is True.
          required: false
          default: true
          type: boolean
        - name: intersection_types
          in: formData
          description: |
            A comma-separated list of product types to include in the product intersection check.
            Valid intersection type parameters: pointcloud, raster, vector, mesh.
            All types are included by default.
          required: false
          type: string
        - name: intersection_geoms
          in: formData
          description: |
            Determines whether or not to include the entire geometry of each product that intersects with the AOI geometry.
            Product geometries can be complex, so setting this to False can greatly reduce the return size and
            is recommended if the entire geometry is not needed.
            Default value is True.
          required: false
          default: true
          type: boolean
      responses:
        200:
          description: The new AOI.
          schema:
            $ref: '#/definitions/AOIResponse'
        400:
          $ref: '#/responses/ErrorResponse'
        401:
          $ref: '#/responses/UnauthenticatedResponse'
  /aois/{pk}:
    get:
      tags:
        - AOI
      summary: Get AOI by PK
      description: |
        Get information for one or more AOIs.
      parameters:
        - name: pk
          in: path
          description: A comma-separated list of AOI primary keys.
          required: true
          type: integer
        - name: intersections
          in: query
          description: |
            Determines whether or not to include a list of products that intersect with the AOI geometry. This can
            be time-consuming so setting this to False is recommended if product intersections aren't needed.
            Default value is True.
          required: false
          default: true
          type: boolean
        - name: intersection_types
          in: query
          description: |
            A comma-separated list of product types to include in the product intersection check.
            Valid intersection type parameters: pointcloud, raster, vector, mesh.
            All types are included by default.
          required: false
          type: string
        - name: intersection_geoms
          in: query
          description: |
            Determines whether or not to include the entire geometry of each product that intersects with the AOI geometry.
            Product geometries can be complex, so setting this to False can greatly reduce the return size and
            is recommended if the entire geometry is not needed.
            Default value is True.
          required: false
          default: true
          type: boolean
        - name: export_full
          in: query
          description: |
            Determines whether or not to include a list of export files that
            belong to exports for the AOI.
            Default value is True.
          required: false
          default: true
          type: boolean
        - name: sort
          in: query
          description: |
            Sort the result by a given field.  A "-" can be prepended to the field to indicate descending order.
            Valid AOI sorting parameters: area, created_at, name, pk, user.
          default: pk
          required: false
          type: string
      responses:
        200:
          description: An array of AOIs.
          schema:
            $ref: '#/definitions/AOIResponse'
        400:
          $ref: '#/responses/ErrorResponse'
        401:
          $ref: '#/responses/UnauthenticatedResponse'
        404:
          $ref: '#/responses/DoesNotExistResponse'
    patch:
      tags:
        - AOI
      summary: Edit AOI by PK
      description: |
        Update an AOIs name, notes, or geometry. In order to change an AOI's
        geometry, it must contain 0 generated exports. While we can `GET` or `DELETE` multiple primary keys, the `PATCH` may only be applied to a single primary key.
      parameters:
        - name: pk
          in: path
          description: The primary key of an existing AOI.
          required: true
          type: integer
        - name: name
          in: formData
          description: The name for the AOI.
          required: false
          type: string
        - name: geom
          in: formData
          description: A WKT or GeoJSON geometry describing the AOI.
          required: false
          type: string
        - name: notes
          in: formData
          description: The notes for the AOI.
          required: false
          type: string
        - name: subscribe
          in: formData
          description: Whether or not to subscribe to the AOI.
          required: false
          type: boolean
      responses:
        200:
          description: The updated AOI.
          schema:
            $ref: '#/definitions/AOIResponse'
        400:
          $ref: '#/responses/ErrorResponse'
        401:
          $ref: '#/responses/UnauthenticatedResponse'
        404:
          $ref: '#/responses/DoesNotExistResponse'
    delete:
      tags:
        - AOI
      summary: Delete AOI by PK
      description: Delete one or more existing AOIs.
      parameters:
        - name: pk
          in: path
          description: A comma-separated list of AOI primary keys.
          required: true
          type: integer
      responses:
        200:
          description: Successful AOI deletion responds with an empty body.
        400:
          $ref: '#/responses/ErrorResponse'
        401:
          $ref: '#/responses/UnauthenticatedResponse'
        404:
          $ref: '#/responses/DoesNotExistResponse'
  /exports:
    post:
      tags:
        - Export
      summary: Generate export
      consumes:
        - application/json
      description: |
        Exports is new in API v3. It replaces the former `/aoi/{pk}/generate/pointcloud` endpoint. A user would typically begin by querying `/products` for available products that are coincident with the provided geometry `geom`.
      parameters:
        - name: aoi
          in: formData
          description: The primary key of the AOI used to export from.
          required: true
          type: integer
        - name: products
          in: formData
          description: |
            A comma-separated list of product primary keys to include in the export.
          required: true
          type: string
        - name: name
          in: formData
          description: An optional name for the export.
          required: false
          type: string
        - name: hsrs
          in: formData
          description: Horizontal Spatial Reference System. Accepts an EPSG code. Defaults to the source data HSRS.
          required: false
          type: integer
        - name: vsrs
          in: formData
          description: Vertical Spatial Reference System. Pointcloud and Raster export option. Accepts an EPSG code. Valid supported values are 4326, 5773, and 3855. Defaults to source data VSRS if present.
          required: false
          type: integer
        - name: file_export_options
          in: formData
          description: |
            Pointcloud and Raster export option. Determine file merging strategy. Both export types accept individual and collect.
            Default is individual.
          required: false
          type: string
        - name: compressed
          in: formData
          description: |
            Pointcloud and Raster export option. Whether or not to export compressed data. Defaults to True.
          required: false
          type: boolean
        - name: send_email
          in: formData
          description: |
            Whether or not to notify user via email upon completion. Defaults to False.
          required: false
          type: boolean
        - name: file_export_format
          in: formData
          description: |
            Pointcloud export option. Determine the format of the output file(s). Valid values are las12,
            las14, nitf, pdf, bpf3, and source. Defaults to las12.
          required: false
          type: string
        - name: clipping
          in: formData
          description: |
            Pointcloud export option. Whether or not to clip selected products to the boundary of the AOI.
            If false, tiles that intersect the AOI are included in their entirety. Defaults to true.
          required: false
          type: boolean
        - name: generate_dem
          in: formData
          description: |
            Pointcloud export option. Whether or not to generate a DEM from the pointcloud. Defaults to False.
          required: false
          type: boolean
        - name: custom_filters
          in: formData
          description: |
            Pointcloud export option. Custom PDAL filters to use for pointcloud generation. A single filter block should be
            in json object format, multiple filters should be passed as an array of json objects. Any reader or writer blocks
            included will be ignored. See pdal.io/stages/filters.html for filter details. Defaults to None.
          required: false
          type: string
          format: json
        - name: cell_spacing
          in: formData
          description: |
            Pointcloud export option used together with generate_dem. Ignored for
            raster types. Defaults to 1.0.
          required: false
          type: number
          format: float
        - name: smrf_terrain
          in: formData
          description: |
            Pointcloud export option. Used to trigger a SMRF Bare Earth export. Accepts default, urban or suburban,
            mountainous, and foliated. Default is None. Cannot be used with
            pmf_terrain option.
          required: false
          type: string
        - name: be_extract
          in: formData
          description: |
            Pointcloud export option. Whether or not to extract ground returns. Defaults to False.
          required: false
          type: boolean
        - name: pmf_terrain
          in: formData
          description: |
            Pointcloud export option. Used to trigger a PMF Bare Earth export. Accepts urban, suburban,
            mountainous, and foliated. Default is none. Cannot be used with
            smrf_terrain option.
          type: string
        - name: sri_hres
          in: formData
          description: |
            Deprecated Pointcloud export option. Used to trigger a Sarnoff Bare Earth export. Accepts the horizontal
            resolution. Default is none. Cannot be used with smrf_terrain or pmf_terrain options.
          required: false
          type: number
          format: float
        - name: decimation_radius
          in: formData
          description: |
            Pointcloud export option. The minimum distance between points.  If a neighboring point is
            found within this radius, it will be discarded.  Units in meters. Uses PDAL
            decimation filter. Default is none.
          required: false
          type: number
          format: float
        - name: capacity
          in: formData
          description: |
            Pointcloud export option. How many points to fit into each tile. The number of points in each
            tile will not exceed this value, and will sometimes be less than
            it. Uses PDAL chipper filter. Cannot be used with length
            option. Default is none.
          required: false
          type: integer
        - name: length
          in: formData
          description: |
            Pointcloud export option. The target length of generated tiles. Units in meters. Uses PDAL splitter filter. Cannot be used with capacity
            option. Default is none.
          required: false
          type: number
          format: float
        - name: file_format_options
          in: formData
          description: |
            Raster export option.  Determine the format of the output file(s). Valid values are GTiff, NITF, and source. Defaults to GTiff.
          required: false
          type: string
        - name: target_resolution
          in: formData
          description: |
            Raster export option.  Determine the raster cell size (in meters). Defaults to None which uses the source resolution size.
          required: false
          type: number
          format: float
        - name: vector_format
          in: formData
          description: |
            Vector export option. Accepts officially supported vector formats. Valid values are ESRI Shapefile, GML, GPKG, KMZ, GeoJSON, and SQLite.
            Defaults to ESRI Shapefile.
          required: false
          type: string
        # - name: afe_selection
        #   in: formData
        #   required: false
        #   description: |
        #     Automated Feature Extraction selection. Accepts a number of different algorithm names, some with the option to include Tree output. Algorithm name
        #     ends in semicolon (;) which is the separator for whether Tree / Vegetaion output is requested.
        #   type: string
        #   enum: [texpert_1.2.12;, ara_mrf;, ara_mrf;trees, ara;, ara;trees, psu;, texpert_3.0.14;, texpert_3.0.14;trees]
        - name: derived_rasters
          in: formData
          required: false
          description: |
            Raster Export Option - Elevation only. Generate Derived Rasters, eg alternative representations of the Elevation data. Accepts a number of different derived outputs
          type: string
          enum: [hillshade, shaded_relief_terrain, shaded_relief_rgb, shaded_slope, slope, aspect]
        - name: derived_pc_rasters
          in: formData
          required: false
          description: |
            Pointcloud Export Option - Elevation only. Generate Pointcloud Derived Rasters, eg alternative representations of the Pointcloud data. Accepts a number of different derived outputs
          type: string
          enum: [dtm_hillshade, dsm_hillshade, rii, shaded_relief_dtm, shaded_relief_dsm, slope, slope_shade, slope_dtm, slope_shade_dtm, aspect, aspect_dtm, orthophoto]
      responses:
        200:
          description: Started export object.
          schema:
            $ref: '#/definitions/ExportStartedResponse'
        400:
          $ref: '#/responses/ErrorResponse'
  /exports/{pk}:
    get:
      tags:
        - Export
      summary: Get export by PK
      description: Get information for one or more exports.
      parameters:
        - name: pk
          in: path
          description: A comma-separated list of export primary keys.
          required: true
          type: integer
        - name: sort
          in: query
          description: |
            Sort the result by a given field.  A "-" can be prepended to the field to indicate descending order.
            Valid Export sorting parameters: name, pk, started_at, user.
          default: pk
          required: false
          type: string
        - name: file_geoms
          in: query
          description:  |
            Determines whether or not to include the geometry of each export file generated by this Export.
            Geometries can be verbose, so keeping this set to False can greatly reduce the return size and
            is recommended if the geometries are not needed.
            Default value is False.
          default: false
          required: false
          type: boolean
      responses:
        200:
          description: Export objects.
          schema:
            $ref: '#/definitions/ExportResponse'
        400:
          $ref: '#/responses/ErrorResponse'
        401:
          $ref: '#/responses/UnauthenticatedResponse'
        404:
          $ref: '#/responses/DoesNotExistResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
    patch:
      tags:
        - Export
      summary: Edit export by PK
      description: Updates an exports name or notes. While we can `GET` or `DELETE` multiple primary keys, the `PATCH` may only be applied to a single primary key.
      parameters:
        - name: pk
          in: path
          description: The primary key of the export.
          required: true
          type: integer
        - name: name
          in: formData
          description: The name for the export.
          required: false
          type: string
        - name: notes
          in: formData
          description: The notes for the export.
          required: false
          type: string
      responses:
        200:
          description: Export object.
          schema:
            $ref: '#/definitions/ExportResponse'
        400:
          $ref: '#/responses/ErrorResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
        401:
          $ref: '#/responses/UnauthenticatedResponse'
        404:
          $ref: '#/responses/DoesNotExistResponse'
    delete:
      tags:
        - Export
      summary: Delete export by PK
      description: Delete one or more existing exports.
      parameters:
        - name: pk
          in: path
          description: A comma-separated list of export primary keys.
          required: true
          type: integer
      responses:
        200:
          description: Successful export deletion responds with an empty body.
        400:
          $ref: '#/responses/ErrorResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
  /exports/filters:
    get:
      tags:
        - Export
      summary: Get PDAL filters available for use in exports.
      description: Get PDAL filters available for use in exports.
      responses:
        200:
          description: Filters list.
          schema:
            $ref: '#/definitions/FiltersResponse'
        400:
          $ref: '#/responses/ErrorResponse'
        401:
          $ref: '#/responses/UnauthenticatedResponse'
        404:
          $ref: '#/responses/DoesNotExistResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
  /holdings:
    get:
      tags:
        - Holding
      summary: Get data holdings
      description: |
        Provides a high level overview of GRiD's data holdings.
      parameters:
        - name: geom
          in: query
          description: A WKT or GeoJSON geometry used to filter Holdings results.
          required: false
          type: string
        - name: geoms
          in: query
          description: |
            Determines whether or not to include the full coverage geometry WKT with the return.
            Product geometries can be complex, so setting this to False can greatly reduce the return size and
            is recommended if the geometry is not needed.
          required: false
          type: boolean
          default: true
        - name: program
          in: query
          description: |
            A comma-separated list of program names used to filter the results.
          required: false
          type: string
        - name: access_tag
          in: query
          description: |
            A comma-separated list of access permision names used to filter the results.
          required: false
          type: string
        - name: datatype
          in: query
          description: |
            A comma-separated list of datatypes used to filter the results.
          required: false
          type: string
      responses:
        200:
          description: Holdings objects.
          schema:
            $ref: '#/definitions/DataHoldingResponse'
        400:
          $ref: '#/responses/ErrorResponse'
        401:
          $ref: '#/responses/UnauthenticatedResponse'
  /products:
    get:
      tags:
        - Product
      summary: Get products by geom
      description: |
        API users will query the `products` endpoint to discover available products that are coincident with the given geometry `geom`.
        Results can be filtered by sensor or type.
      parameters:
        - name: geom
          in: query
          description: A WKT or GeoJSON geometry used to discover the Product results that intersect the given geometry.
          required: true
          type: string
        - name: geoms
          in: query
          description: |
            Determines whether or not to include full product geometries with the return.
            Product geometries can be complex, so setting this to False can greatly reduce the return size and
            is recommended if the entire geometry is not needed.
          required: false
          default: false
          type: boolean
        - name: sensor
          in: query
          description: A comma-separated list of sensor names used to filter the results.
          required: false
          type: string
        - name: datatype
          in: query
          description: |
            A comma-separated list of datatypes used to filter the results.
          required: false
          type: string
        - name: program
          in: query
          description: |
            A comma-separated list of program names used to filter the results.
          required: false
          type: string
        - name: access_tag
          in: query
          description: |
            A comma-separated list of access permission names used to filter the results.
          required: false
          type: string
        - name: type
          in: query
          description: |
            A comma-separated list of product types to include in the product intersection check.
            Valid intersection type parameters: pointcloud, raster, vector, mesh.
            All types are included by default.
          required: false
          type: string
        - name: error_model
          in: query
          description: |
            A comma-separated list of error model names to include in the product intersection check, such as GPM.
            If left blank, products with any error model or no error model will be included.
          required: false
          type: string
        - name: files
          in: query
          description: |
            Whether to include the file list or not. Default value is False
          required: false
          default: false
          type: boolean
        - name: sort
          in: query
          description: |
            Sort the result by a given field.  A "-" can be prepended to the field to indicate descending order.
            Valid Product sorting parameters: collected_at, name, pk.
          default: pk
          required: false
          type: string
      responses:
        200:
          description: Product objects.
          schema:
            $ref: '#/definitions/ProductResponse'
        400:
          $ref: '#/responses/ErrorResponse'
        401:
          $ref: '#/responses/UnauthenticatedResponse'
  /products/{pk}:
    get:
      tags:
        - Product
      summary: Get product by PK
      description: Get information for one or more products.
      parameters:
        - name: pk
          in: path
          description: A comma-separated list of product primary keys.
          required: true
          type: integer
        - name: geoms
          in: query
          description: |
            Determines whether or not to include the full product geometry with the return.
            Product geometries can be complex, so setting this to False can greatly reduce the return size and
            is recommended if the entire geometry is not needed.
            Default value is True.
          required: false
          default: true
          type: boolean
        - name: files
          in: query
          description: |
            Whether to include the file list or not. Default value is False
          required: false
          default: false
          type: boolean
        - name: sort
          in: query
          description: |
            Sort the result by a given field.  A "-" can be prepended to the field to indicate descending order.
            Valid Product sorting parameters: collected_at, name, pk.
          default: pk
          required: false
          type: string
      responses:
        200:
          description: A product (pointcloud, raster, vector, or mesh) object.
          schema:
            $ref: '#/definitions/ProductResponse'
        400:
          $ref: '#/responses/ErrorResponse'
        401:
          $ref: '#/responses/UnauthenticatedResponse'
        404:
          $ref: '#/responses/DoesNotExistResponse'
  /geonames:
    get:
      tags:
        - Geoname
      summary: Lookup geoname by geom
      description: |
        Get suggested AOI name based on geographic coordinates of the geometry.
      parameters:
        - name: geom
          in: query
          description: A WKT or GeoJSON geometry describing the AOI.
          required: true
          type: string
      responses:
        200:
          description: Geoname object.
          schema:
            $ref: '#/definitions/GeonameResponse'
        400:
          $ref: '#/responses/ErrorResponse'
        401:
          $ref: '#/responses/UnauthenticatedResponse'
  /tasks:
    get:
      tags:
        - Task
      summary: Get all tasks
      description: Get all of your tasks. Results can be filtered by state or name.
      parameters:
        - name: state
          in: query
          description: The state of the task (SUCCESS, RUNNING, QUEUED, CANCELED, or FAILURE). Accepts a comma-separated list.
          required: false
          type: string
        - name: name
          in: query
          description: The name of the task (export.tasks.generate_export, api.tasks.deliver_hook). Accepts a comma-separated list.
          required: false
          type: string
        - name: sort
          in: query
          description: |
            Sort the result by a given field.  A "-" can be prepended to the field to indicate descending order.
            Valid Task sorting parameters: name, state, task_id, time_stamp.
          default: task_id
          required: false
          type: string
      responses:
        200:
          description: Task objects.
          schema:
            $ref: '#/definitions/TaskResponse'
        400:
          $ref: '#/responses/ErrorResponse'
        401:
          $ref: '#/responses/UnauthenticatedResponse'
  /tasks/{task_id}:
    get:
      tags:
        - Task
      summary: Get task by task_id
      description: Get information for one or more tasks.
      parameters:
        - name: task_id
          in: path
          description: A comma-separated list of task IDs.
          required: true
          type: string
        - name: sort
          in: query
          description: |
            Sort the result by a given field.  A "-" can be prepended to the field to indicate descending order.
            Valid Task sorting parameters: name, state, task_id, time_stamp.
          default: task_id
          required: false
          type: string
      responses:
        200:
          description: Task object.
          schema:
            $ref: '#/definitions/TaskResponse'
        400:
          $ref: '#/responses/ErrorResponse'
        401:
          $ref: '#/responses/UnauthenticatedResponse'
        404:
          $ref: '#/responses/DoesNotExistResponse'
  /hooks:
    get:
      tags:
        - Hook
      summary: Get all hooks
      description: Get all of your hooks.
      parameters:
        - name: sort
          in: query
          description: |
            Sort the result by a given field.  A "-" can be prepended to the field to indicate descending order.
            Valid Hook sorting parameters: created_at, event, pk, target.
          default: pk
          required: false
          type: string
      responses:
        200:
          description: Hook objects.
          schema:
            $ref: '#/definitions/HookResponse'
        400:
          $ref: '#/responses/ErrorResponse'
        401:
          $ref: '#/responses/UnauthenticatedResponse'
    post:
      tags:
        - Hook
      summary: Create hook
      consumes:
        - application/json
      description: |
        Create a new hook. Hooks are new to v3 of the API and allow for users to subscribe to particular GRiD events and be notified when they occur.
        Currently supported events are: newdata.loaded and export.complete. The newdata.loaded event is triggered any time new pointcloud, raster, vector, or mesh data
        is ingested into GRiD and intersects one of your existing AOIs. The export.complete event is triggered any time one of your exports finishes, SUCCESS or FAILURE.
        The scope of these notifications can be controlled by including an optional AOI parameter. Newdata and export notifications will be limited to the given AOI if supplied.
        Hooks that fail to deliver will retry 5 times. Delivered hooks that receive a 410 or 500+ return response will be automatically deleted.
      parameters:
        - name: event
          in: formData
          description: The event being subscribed to (export.complete, newdata.loaded)
          required: true
          type: string
        - name: target
          in: formData
          description: The destination URL for payloads to be delivered to.
          required: true
          type: string
        - name: aoi
          in: formData
          description: The pk of an AOI. Used to limit the scope of event notifications.
          required: false
          type: integer
      responses:
        200:
          description: A hook object.
          schema:
            $ref: '#/definitions/HookResponse'
        400:
          $ref: '#/responses/ErrorResponse'
        401:
          $ref: '#/responses/UnauthenticatedResponse'
  /hooks/{pk}:
    get:
      tags:
        - Hook
      summary: Get hook by PK
      description: Get information for one or more hooks.
      parameters:
        - name: pk
          in: path
          description: A comma-separated list of hook primary keys.
          required: true
          type: integer
        - name: sort
          in: query
          description: |
            Sort the result by a given field.  A "-" can be prepended to the field to indicate descending order.
            Valid Hook sorting parameters: created_at, event, pk, target.
          default: pk
          required: false
          type: string
      responses:
        200:
          description: A hook object.
          schema:
            $ref: '#/definitions/HookResponse'
        400:
          $ref: '#/responses/ErrorResponse'
        401:
          $ref: '#/responses/UnauthenticatedResponse'
        404:
          $ref: '#/responses/DoesNotExistResponse'
    patch:
      tags:
        - Hook
      summary: Edit hook by PK
      description: Updates an hooks event, target, or AOI. While we can `GET` or `DELETE` multiple primary keys, the `PATCH` may only be applied to a single primary key.
      parameters:
        - name: pk
          in: path
          description: The primary key of the hook.
          required: true
          type: integer
        - name: event
          in: formData
          description: The event being subscribed to (export.complete, newdata.loaded)
          required: false
          type: string
        - name: target
          in: formData
          description: The destination URL for payloads to be delivered to.
          required: false
          type: string
        - name: aoi
          in: formData
          description: The pk of an AOI. Used to limit the scope of event notifications.
          required: false
          type: integer
      responses:
        200:
          description: Hook object.
          schema:
            $ref: '#/definitions/HookResponse'
        400:
          $ref: '#/responses/ErrorResponse'
        401:
          $ref: '#/responses/UnauthenticatedResponse'
        404:
          $ref: '#/responses/DoesNotExistResponse'
    delete:
      tags:
        - Hook
      summary: Delete hook
      description: Delete one or more existing hooks.
      parameters:
        - name: pk
          in: path
          description: A comma-separated list of hook primary keys.
          required: true
          type: integer
      responses:
        200:
          description: Successful hook deletion responds with an empty body.
        400:
          $ref: '#/responses/ErrorResponse'
        401:
          $ref: '#/responses/UnauthenticatedResponse'
        404:
          $ref: '#/responses/DoesNotExistResponse'
  /hooks/{pk}/test:
    post:
      tags:
        - Hook
      summary: Test a hook by PK
      description: Tests a hook by sending event-specific test data to the hooks target url.
      consumes:
        - text/plain; charset=utf-8
      parameters:
        - name: pk
          in: path
          description: A comma-separated list of hook primary keys.
          required: true
          type: integer
      responses:
        200:
          description: Successful hook test responds with an empty body.
        400:
          $ref: '#/responses/ErrorResponse'
        401:
          $ref: '#/responses/UnauthenticatedResponse'
        404:
          $ref: '#/responses/DoesNotExistResponse'
  /stac/{pk}:
    post:
      tags:
        - STAC
      summary: Retrieve STAC ItemCollection for this Product.
      parameters:
        - in: path
          name: pk
          description: ID of Raster or Pointcloud Product
          required: true
          schema:
            type: integer
      responses:
        '200':
          $ref: '#/definitions/StacItemCollectionResponse'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  description: Page number for ItemCollection. Page 0 may have items 0-5, page 1, 6-10.
                  type: integer
    get:
      tags:
        - STAC
      summary: Retrieve STAC ItemCollection for this Product.
      parameters:
        - in: path
          name: pk
          description: ID of a Raster or Pointcloud Product
          required: true
          schema:
            type: integer
      responses:
        '200':
          $ref: '#/definitions/StacItemCollectionResponse'
  /stac/{pk}/search/:
    post:
      tags:
        - STAC
      summary: Retrieve STAC ItemCollection for this Product.
      parameters:
        - in: path
          name: pk
          description: ID of Product
          required: true
          schema:
            type: integer
      requestBody:
        description: A JSON object of STAC Item Search parameters.
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                limit:
                  description: Maximum number of items to return.
                  type: integer
                page:
                  description: Page number for ItemCollection. Page 0 may have items 0-5, page 1, 6-10.
                  type: integer
                  default: 0
                ids:
                  description: Array of IDs corresponding to Rasters or Pointclouds in the product.
                  type: array
                  items:
                    type: integer
                intersects:
                  $ref: '#/components/schemas/GeoJsonPoly'
                bbox:
                  description: Describes if an Aoi subscription exists.
                  type: array
                  items:
                    type: number
                    format: float
                  minItems: 4
                  maxItems: 6
      responses:
        '200':
          $ref: '#definitions/StacItemCollectionResponse'
    get:
      tags:
        - STAC
      summary: Retrieve STAC ItemCollection for this Product.
      parameters:
        - in: path
          name: id
          description: ID of Product
          required: true
          schema:
            type: integer
      responses:
        '200':
          $ref: '#/definitions/StacItemCollectionResponse'

responses:
  DoesNotExistResponse:
    description: Object with specified ID(s) does not exist.
    schema:
      $ref: "#/definitions/ErrorResponse"
  UnauthenticatedResponse:
    description: Authorization information is missing or invalid.
    schema:
      $ref: "#/definitions/ErrorResponse"
  ForbiddenResponse:
    description: User does not have permission to access this object.
    schema:
      $ref: "#/definitions/ErrorResponse"
  ErrorResponse:
    description: Unexpected error occurred.
    schema:
      $ref: "#/definitions/ErrorResponse"
definitions:
  AOI:
    type: object
    properties:
      name:
        type: string
        description: The name of the AOI.
      created_at:
        type: string
        format: date-time
        description: The date of AOI creation. ISO 8601 format as UTC.
      user:
        type: string
        description: The email address of the user that created the object.
      geom:
        type: string
        description: The WKT geometry of the object.
      area:
        type: number
        format: float
        description: The area of the geometry in sq_km.
      notes:
        type: string
        description: User notes about the object.
      pk:
        type: string
        description: The primary key (ID) of the object.
      exports:
        type: array
        description: A list of Export objects for this AOI.
        items:
          $ref: '#/definitions/Export'
      pointcloud_intersects:
        type: array
        items:
          $ref: '#/definitions/PointcloudProduct'
        description: The pointcloud products intersecting AOI.
      raster_intersects:
        type: array
        items:
          $ref: '#/definitions/RasterProduct'
        description: The raster products intersecting AOI.
      vector_intersects:
        type: array
        items:
          $ref: '#/definitions/VectorProduct'
        description: The vector products intersecting AOI.
      mesh_intersects:
        type: array
        items:
          $ref: '#/definitions/MeshProduct'
        description: The mesh products intersecting AOI.
      new_pointcloud_data:
        type: array
        items:
          $ref: '#/definitions/Pk'
        description: The list of pointcloud product PKs that have been loaded to GRiD since your last inquiry for this AOI.
      new_raster_elevation_data:
        type: array
        items:
          $ref: '#/definitions/Pk'
        description: The list of raster elevation product PKs that have been loaded to GRiD since your last inquiry for this AOI.
      new_raster_imagery_data:
        type: array
        items:
          $ref: '#/definitions/Pk'
        description: The list of raster imagery product PKs that have been loaded to GRiD since your last inquiry for this AOI.
      new_raster_thematic_data:
        type: array
        items:
          $ref: '#/definitions/Pk'
        description: The list of raster thematioc product PKs that have been loaded to GRiD since your last inquiry for this AOI.
      new_mesh_data:
        type: array
        items:
          $ref: '#/definitions/Pk'
        description: The list of mesh product PKs that have been loaded to GRiD since your last inquiry for this AOI.
      new_vector_data:
        type: array
        items:
          $ref: '#/definitions/Pk'
        description: The list of vector product PKs that have been loaded to GRiD since your last inquiry for this AOI.
      subscribed:
        type: boolean
        description: Indicates the subscription status for the AOI.
  AOIResponse:
    type: object
    properties:
      aois:
        type: array
        description: A dictionary with an "aois" key containing an array of AOI objects.
        items:
          $ref: '#/definitions/AOI'
  AssociatedProductResponse:
    type: object
    properties:
      pointclouds:
        type: array
        items:
          $ref: '#/definitions/PointcloudProduct'
        description: A list of associated pointcloud products.
      rasters:
        type: array
        items:
          $ref: '#/definitions/RasterProduct'
        description: A list of associated raster products.
      vectors:
        type: array
        items:
          $ref: '#/definitions/VectorProduct'
        description: A list of associated vector products.
    description: Associated products are supporting products that should only be exported along with their parent product.
  DataHolding:
    type: object
    properties:
      program:
        type: string
        description: The name of the program that the data falls under.
      program_description:
        type: string
        description: Information about the program and the data contained.
      datatype:
        type: string
        description: Indicates the type of data contained for these holdings.
      area:
        type: number
        format: float
        description: The total area of the holdings coverage in sq_km.
      access_tag:
        type: string
        description: The name of the Access Tag permission required to access this data.
      latest_load:
        type: string
        format: date-time
        description: Most recent date of data loaded. ISO 8601 format as UTC.
      geom:
        type: string
        description: The WKT geometry of the coverage for these holdings. A WKT will only be present if the user has the necessary permissions to interact with this data.
      coverage_download_urls:
        type: array
        items:
          $ref: '#/definitions/Url'
        description: A list of download urls containing the coverage shape of the data. Only returned if the user has the required permissions to access the data.
      filesize:
        type: integer
        description: The total size on the filesystem in bytes.
      file_count:
        type: integer
        description: The total number of files loaded on the filesystem.
      point_count:
        type: integer
        description: Only applies to pointcloud datasets. The total number of points.
      global_dataset:
        type: boolean
        description: Indicates whether or not the data coverage is global.
  DataHoldingResponse:
    type: object
    properties:
      holdings:
        type: array
        items:
          $ref: '#/definitions/DataHolding'
        description: A dictionary with a "holdings" key containing an array of DataHolding objects.
  ErrorResponse:
    type: object
    properties:
      error:
        type: string
        description: Description of the error from the given API request.
  Export:
    type: object
    properties:
      name:
        type: string
        description: The name of the Export.
      datatype:
        type: string
        description: The datatype(s) of exportfiles contained in the export.
      user:
        type: string
        description: The email address of the user that created the object.
      hsrs:
        type: integer
        description: The horizontal spatial reference system EPSG code.
      vsrs:
        type: integer
        description: The vertical spatial reference system EPSG code.
      pk:
        type: string
        description: The primary key (ID) of the object.
      started_at:
        type: string
        format: date-time
        description: Time of creation for the AOI. ISO 8601 format as UTC.
      status:
        type: string
        description: The task status of the export generation (SUCCESS, RUNNING, QUEUED, CANCELED, and FAILURE).
      url:
        type: string
        description: The download URL of the Export object.
      license_url:
        type: string
        description: The download URL of the license file for an Export object.
      auxiliary_url:
        type: string
        description: The download URL of required auxiliary content for an Export object.
      zip_url:
        type: string
        description: The download URL of the dynamically generated zip for all Exportfiles within an Export object.
      complete_zip_url:
        type: string
        description: The download URL of the dynamically generated zip for all Exportfiles within an Export object, as well as any additional linked files, such as error model data.
      rgb:
        type: boolean
        description: Whether or not RGB dimension is included in exported data.
      export_type:
        type: string
        description: The base type of export (pointcloud, raster, vector).
      intensity:
        type: boolean
        description: Whether or not Intensity dimension is included in exported data.
      dim_classification:
        type: boolean
        description: Whether or not Classification dimension is included in exported data.
      file_export_options:
        type: string
        description: The file export options used (individual, collect).
      generate_dem:
        type: boolean
        description: Whether or not this was a generated DEM from pointcloud.
      send_email:
        type: boolean
        description: Whether or not to send an email notification upon completion.
      cell_spacing:
        type: number
        format: float
        description: The cell spacing used in DEM generation, if applicable.
      notes:
        type: string
        description: User notes about the object.
      classification:
        type: string
        description: The geospatial classifications selected for the export.
      pmf_terrain:
        type: string
        description: The PMF terrain option of the export.
      smrf_terrain:
        type: string
        description: The SMRF terrain option of the export.
      be_extract:
        type: boolean
        description: Whether or not to extract ground returns.
      sri_hres:
        type: number
        format: float
        description: The sri_hres value of the export. Deprecated option.
      exportfiles:
        oneOf:
          - type: array
            description: A list of Exportfile objects for this Export.
            items:
              $ref: '#/definitions/Exportfile'
          - type: boolean
            description: boolean indicating presence of Exportfile
      task_id:
        type: string
        description: The task_id of the Export processing task.
      capacity:
        type: number
        format: float
        description: The number of points used to generate each file.
      length:
        type: number
        format: float
        description: The length in meters used to generate each file.
      file_format_options:
        type: string
        description: The format of the output raster file(s).
      vector_format:
        type: string
        description: The format of the output vector file(s).
      custom_filters:
        type: string
        description: Custom PDAL filters used for pointcloud generation.
  ExportResponse:
    type: object
    properties:
      exports:
        type: array
        items:
          $ref: '#/definitions/Export'
        description: A dictionary with an "exports" key containing an array of Export objects.
  Exportfile:
    type: object
    properties:
      datatype:
        type: string
        description: The datatype of the exportfile.
      name:
        type: string
        description: The name of the Exportfile.
      pk:
        type: string
        description: The primary key (ID) of the object.
      url:
        type: string
        description: The download URL of the Exportfile object.
      filesize:
        type: integer
        description: The size of the product on the filesystem in bytes.
      aoi_coverage:
        type: number
        format: float
        description: The percent of the Exportfile area covered by the AOI.
      geom:
        type: string
        description: The WKT geometry of this generated file. A WKT will only be present if the user has specifically requested them.
  ExportStarted:
    type: object
    properties:
      export_id:
        type: string
        description: The primary key (ID) of the export object.
      task_id:
        type: string
        description: The task_id of the Export processing task.
  ExportStartedResponse:
    type: object
    properties:
      exports:
        type: array
        items:
          $ref: '#/definitions/ExportStarted'
        description: A dictionary with an "exports" key containing an array of ExportStarted objects.
  Filter:
    type: string
    description: PDAL filter used in exports.
  FiltersResponse:
    type: object
    properties:
      filters:
        type: array
        items:
          $ref: '#/definitions/Filter'
        description: A list of available PDAL filters.
  Geoname:
    type: object
    properties:
      name:
        type: string
        description: The name of the geolocation.
      geom:
        type: string
        description: The WKT geometry of the object.
  GeonameResponse:
    type: object
    properties:
      geonames:
        type: array
        items:
          $ref: '#/definitions/Geoname'
        description: A dictionary with a "geonames" key containing an array of Geoname objects.
  Hook:
    type: object
    properties:
      pk:
        type: string
        description: The primary key (ID) of the object.
      version:
        type: string
        description: The version of the API used to create the hook and used for hook serialization.
      user:
        type: string
        description: The email address of the user that created the object.
      aoi:
        type: integer
        description: The pk of the AOI used to filter hook event notifications.
      created_at:
        type: string
        format: date-time
        description: The date the hook was created.
      target:
        type: string
        description: The destination url callback data is sent to.
      event:
        type: string
        description: The event to be notified for (export.complete, newdata.loaded)
  HookResponse:
    type: object
    properties:
      hooks:
        type: array
        items:
          $ref: '#/definitions/Hook'
        description: A dictionary with an "hooks" key containing an array of Hook objects.
  MeshProduct:
    type: object
    properties:
      datatype:
        type: string
        description: The datatype (e.g., 3D Tile, Collada, I3S).
      name:
        type: string
        description: The name of the Product.
      pk:
        type: string
        description: The primary key (ID) of the object.
      sensor:
        type: string
        description: The sensor used to make the collection.
      collected_at:
        type: string
        format: date-time
        description: The date of collection. ISO 8601 format as UTC.
      classification:
        type: string
        description: The security classification.
      filesize:
        type: integer
        description: The size of the product on the filesystem in bytes.
      geom:
        type: string
        description: The WKT geometry of the object.
      streaming_url:
        type: string
        description: The URL of the object used to stream the data.
      cesium_viewer:
        type: string
        description: The URL of GRiD's web viewer for this mesh product, if product is 3DTiles, else will be null.
      i3s_viewer:
        type: string
        description: The URL of GRiD's web viewer for this mesh product, if product is I3S, else will be null.
      program:
        type: string
        description: The name of the program that the product falls under.
      access_tag:
        type: string
        description: The name of the access tag that this product is protected by.
      file_paths:
        type: array
        description: A list of all the file paths of the tiles within this product (clipped by geometry if applicable).
        items:
          $ref: '#/definitions/Path'
  Path:
    type: string
    description: The location of the file on the filesystem.
  Pk:
    type: integer
    description: The primary key of the object.
  PointcloudProduct:
    type: object
    properties:
      datatype:
        type: string
        description: The datatype (e.g., LAS1.2, LAS1.4).
      name:
        type: string
        description: The name of the Product.
      pk:
        type: string
        description: The primary key (ID) of the object.
      sensor:
        type: string
        description: The sensor used to make the collection.
      collected_at:
        type: string
        format: date-time
        description: The date of collection. ISO 8601 format as UTC.
      classification:
        type: string
        description: The security classification.
      area:
        type: number
        format: float
        description: The area of the geometry in sq_km.
      filesize:
        type: integer
        description: The size of the product on the filesystem in bytes.
      point_count:
        type: integer
        description: The total number of points in the product.
      density:
        type: number
        format: float
        description: The average point density of the product in sq meters.
      geom:
        type: string
        description: The WKT geometry of the object.
      aoi_coverage:
        type: number
        format: float
        description: The percent of the Product area covered by the AOI or passed in geometry respectively.
      parent_product_pks:
        type: array
        description: Having this field populated with parent product PK(s) indicates this is an associated supporting product. Associated products should only be exported with their parent product included.
        items:
          $ref: '#/definitions/Pk'
      associated_products:
        description: Associated products are supporting products that should only be exported along with their parent product.
        $ref: '#/definitions/AssociatedProductResponse'
      program:
        type: string
        description: The name of the program that the product falls under.
      access_tag:
        type: string
        description: The name of the access tag that this product is protected by.
      file_paths:
        type: array
        description: A list of all the file paths of the tiles within this product (clipped by geometry if applicable).
        items:
          $ref: '#/definitions/Path'
      srs:
        type: array
        description: A list of all the spatial reference systems that apply to the tiles within this product (clipped by geometry if applicable).
        items:
          $ref: '#/definitions/Srs'
  ProductResponse:
    type: object
    properties:
      pointclouds:
        type: array
        items:
          $ref: '#/definitions/PointcloudProduct'
        description: A list of pointcloud products.
      rasters:
        type: array
        items:
          $ref: '#/definitions/RasterProduct'
        description: A list of raster products.
      vectors:
        type: array
        items:
          $ref: '#/definitions/VectorProduct'
        description: A list of vector products.
      meshes:
        type: array
        items:
          $ref: '#/definitions/MeshProduct'
        description: A list of mesh products.
  RasterProduct:
    type: object
    properties:
      datatype:
        type: string
        description: The datatype (e.g., DSM, DTM).
      datacategory:
        type: string
        description: The category of the raster product (Imagery, Elevation Models, etc).
      name:
        type: string
        description: The name of the Product.
      pk:
        type: string
        description: The primary key (ID) of the object.
      sensor:
        type: string
        description: The sensor used to make the collection.
      collected_at:
        type: string
        format: date-time
        description: The date of collection. ISO 8601 format as UTC.
      classification:
        type: string
        description: The security classification.
      area:
        type: number
        format: float
        description: The area of the geometry in sq_km.
      filesize:
        type: integer
        description: The size of the product on the filesystem in bytes.
      geom:
        type: string
        description: The WKT geometry of the object.
      cell_size:
        type: number
        format: float
        description: The average cell size of the product.
      aoi_coverage:
        type: number
        format: float
        description: The percent of the Product area covered by the AOI or passed in geometry respectively.
      parent_product_pks:
        type: array
        description: Having this field populated with parent product PK(s) indicates this is an associated supporting product. Associated products should only be exported with their parent product included.
        items:
          $ref: '#/definitions/Pk'
      associated_products:
        description: Associated products are supporting products that should only be exported along with their parent product.
        $ref: '#/definitions/AssociatedProductResponse'
      program:
        type: string
        description: The name of the program that the product falls under.
      access_tag:
        type: string
        description: The name of the access tag that this product is protected by.
      file_paths:
        type: array
        description: A list of all the file paths of the tiles within this product (clipped by geometry if applicable).
        items:
          $ref: '#/definitions/Path'
      srs:
        type: array
        description: A list of all the spatial reference systems that apply to the tiles within this product (clipped by geometry if applicable).
        items:
          $ref: '#/definitions/Srs'
  Srs:
    type: string
    description: A spatial reference system (SRS) is a coordinate-based local, regional or global system used to locate geographical entities that defines a specific map projection, as well as transformations between different spatial reference systems.
  Task:
    type: object
    properties:
      state:
        type: string
        description: The state of the task (SUCCESS, RUNNING, QUEUED, CANCELED, and FAILURE).
      time_stamp:
        type: string
        format: date-time
        description: Date and time the task was started. ISO 8601 format as UTC.
      name:
        type: string
        description: The name of the task (export.tasks.generate_export, api.tasks.deliver_hook).
      task_id:
        type: string
        description: The ID of the task.
      object_id:
        type: integer
        description: The ID of the object the task is associated with.
  TaskResponse:
    properties:
      tasks:
        type: array
        items:
          $ref: '#/definitions/Task'
        description: A dictionary with an "tasks" key containing an array of Task objects.
  Url:
    type: string
    description: The download url of the object.
  VectorProduct:
    type: object
    properties:
      datatype:
        type: string
        description: The datatype (e.g., trees, buildings_2d).
      name:
        type: string
        description: The name of the Product.
      pk:
        type: string
        description: The primary key (ID) of the object.
      collected_at:
        type: string
        format: date-time
        description: The date of collection. ISO 8601 format as UTC.
      classification:
        type: string
        description: The security classification.
      area:
        type: number
        format: float
        description: The area of the geometry in sq_km.
      filesize:
        type: integer
        description: The size of the product on the filesystem in bytes.
      geom:
        type: string
        description: The WKT geometry of the object.
      sensor:
        type: string
        description: The sensor used to make the collection.
      aoi_coverage:
        type: number
        format: float
        description: The percent of the Product area covered by the AOI or passed in geometry respectively.
      parent_product_pks:
        type: array
        description: Having this field populated with parent product PK(s) indicates this is an associated supporting product. Associated products should only be exported with their parent product included.
        items:
          $ref: '#/definitions/Pk'
      associated_products:
        description: Associated products are supporting products that should only be exported along with their parent product.
        $ref: '#/definitions/AssociatedProductResponse'
      program:
        type: string
        description: The name of the program that the product falls under.
      access_tag:
        type: string
        description: The name of the access tag that this product is protected by.
      file_paths:
        type: array
        description: A list of all the file paths of the tiles within this product (clipped by geometry if applicable).
        items:
          $ref: '#/definitions/Path'
  StacItemCollection:
    description: Spatio Temporal Access Catalog (STAC) Item Collection definition
    type: object
    properties:
      type:
        type: string
        enum: ['FeatureCollection']
        description: FeatureCollection
      features:
        type: array
        items:
          $ref: "https://schemas.stacspec.org/v1.0.0/item-spec/json-schema/item.json"
      links:
        type: array
        items:
          $ref: "https://schemas.stacspec.org/v1.0.0/item-spec/json-schema/item.json#/definitions/link"
      numberMatched:
        type: integer
      numberReturned:
        type: integer
  StacItemCollectionResponse:
    description: STAC Feature Collection
    content:
      application/json:
        schema:
          $ref: '#/definitions/StacItemCollection'
